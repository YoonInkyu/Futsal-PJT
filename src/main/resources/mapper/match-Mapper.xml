<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<!-- 윤인규 10/23 용병 구인구직 게시글 등록 구현중-->
<!-- 윤인규 10/25 용병 구인구직 게시글 지원자 vo 작성 -->
<mapper namespace="matchMapper">
	<resultMap type="com.kh.project.match.vo.MatchVO" id="match">
		<id column="MATCH_CODE" 						property="matchCode"/>
		<result column="TEAM_CODE" 						property="teamCode"/>
		<result column="TEAM_CODE_AWAY" 				property="teamCodeAway"/>
		<result column="MATCH_WRITER" 					property="matchWriter"/>
		<result column="MATCH_INTRO" 					property="matchIntro"/>
		<result column="MATCH_REGDATE" 					property="matchRegdate"/>
		<result column="MATCH_DATE" 					property="matchDate"/>
		<result column="MATCH_START_TIME" 				property="matchStartTime"/>
		<result column="MATCH_END_TIME" 				property="matchEndTime"/>
		<result column="MATCH_POSSIBLE" 				property="matchPossible"/>
		<result column="MATCH_LOCATION" 				property="matchLocation"/>
		<result column="MATCH_APPLYNUM" 				property="matchApplyNum"/>
		<result column="TEAM_NAME"	 					property="teamName"/>
		<result column="RANK_WIN"	 					property="rankWin"/>
		<result column="RANK_DRAW"	 					property="rankDraw"/>
		<result column="RANK_LOSE"	 					property="rankLose"/>
		<result column="RANK_TOTAL_SCORE"	 			property="rankTotalScore"/>
		<result column="MEMBER_NAME"	 				property="memberName"/>
		<result column="MEMBER_CODE"	 				property="memberCode"/>
		<result column="MEMBER_TELL"	 				property="memberTell"/>
	</resultMap>
	
	<resultMap type="com.kh.project.match.vo.MatchManageVO" id="matchManage">
		<id column="MATCH_MANAGE_CODE" 					property="matchManageCode"/>
		<result column="MATCH_CODE" 					property="matchCode"/>
		<result column="TEAM_CODE_AWAY" 				property="teamCodeAway"/>
		<result column="TEAM_NAME" 						property="teamName"/>
		<result column="MATCH_MANAGE_RESPONSE" 			property="matchManageResponse"/>
		<result column="MEMBER_NAME"	 				property="memberName"/>
		<result column="MEMBER_CODE"	 				property="memberCode"/>
		<result column="MEMBER_TELL"	 				property="memberTell"/>
		<result column="MATCH_DATE" 					property="matchDate"/>
	</resultMap>
	
	<resultMap type="com.kh.project.match.vo.MatchResultVO" id="matchResult">
		<id column="MATCH_RESULT_CODE" 					property="matchResultCode"/>
		<result column="MATCH_CODE" 					property="matchCode"/>
		<result column="MATCH_RESULT_HOMETEAM_SCORE" 	property="matchResultHometeamScore"/>
		<result column="MATCH_RESULT_AWAYTEAM_SCORE" 	property="matchResultAwayteamScore"/>
		<result column="TEAM_CODE" 						property="teamCode"/>
		<result column="TEAM_CODE_AWAY" 				property="teamCodeAway"/>
		<result column="RANK_WIN"	 					property="rankWin"/>
		<result column="RANK_DRAW"	 					property="rankDraw"/>
		<result column="RANK_LOSE"	 					property="rankLose"/>
		<result column="RANK_TOTAL_SCORE"	 			property="rankTotalScore"/>
	</resultMap>
	
	<!-- 매치 등록 -->
	<insert id="insertMatchBoard">
		INSERT INTO MATCH (
			MATCH_CODE
			, MATCH_WRITER
			, MATCH_INTRO	
			, MATCH_DATE
			, MATCH_START_TIME
			, MATCH_END_TIME
			, MATCH_POSSIBLE
			, MATCH_LOCATION
			, TEAM_CODE
		) VALUES (
			(SELECT 'MATCH_CODE_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MATCH_CODE, 12, 4))), 0)+1, 4, '0') FROM MATCH)
			, #{matchWriter}
			, #{matchIntro}
			, #{matchDate}
			, #{matchStartTime}
			, #{matchEndTime}
			, #{matchPossible}
			, #{matchLocation}
			, #{teamCode}
		)
	</insert>
	
	<!-- 매치 리스트 조회 -->
	<select id="selectMatchList" resultMap="match">
		SELECT MATCH_CODE
		    , MATCH_LOCATION
		    , MATCH_DATE
		    , MATCH_START_TIME
		    , MATCH_END_TIME
		    , MATCH_APPLYNUM
		    , MATCH_WRITER
		    , MATCH_REGDATE
		    , MATCH_POSSIBLE
		    , ROW_NUM
		FROM (
		    SELECT MATCH_CODE
		        , MATCH_LOCATION
		        , MATCH_DATE
		        , MATCH_START_TIME
		        , MATCH_END_TIME
		        , MATCH_APPLYNUM
		        , MATCH_WRITER
		        , MATCH_REGDATE
		        , MATCH_POSSIBLE
		        , ROWNUM AS ROW_NUM
		    FROM (
		            SELECT MATCH_CODE
		                , MATCH_LOCATION
		                , MATCH_DATE
		                , MATCH_START_TIME
		                , MATCH_END_TIME
		                , MATCH_APPLYNUM
		                , MATCH_WRITER
		                , TO_CHAR(MATCH_REGDATE, 'YYYY-MM-DD') AS MATCH_REGDATE
		                , MATCH_POSSIBLE
		            FROM MATCH
		            WHERE 1 = 1
		            <if test="searchLocation != null and !searchLocation.equals('')">
		           	 	AND MATCH_LOCATION = '${searchLocation}'
		            </if>
		            <if test="searchKeyword != null and !searchKeyword.equals('')">
		            	AND MATCH_POSSIBLE = '${searchKeyword}'
		            </if>
		            <if test="searchValue != null and !searchValue.equals('')">
		           		AND MATCH_WRITER LIKE '%'||#{searchValue}||'%'
		            </if>
		            ORDER BY MATCH_CODE DESC
		        )
		)
		WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>
	
	<!-- 나의 매치 리스트 조회 -->
	<select id="MyMatchList" resultMap="match">
		SELECT MATCH_CODE
		    , MATCH_LOCATION
		    , MATCH_DATE
		    , MATCH_START_TIME
		    , MATCH_END_TIME
		    , MATCH_APPLYNUM
		    , MATCH_WRITER
		    , MATCH_REGDATE
		    , MATCH_POSSIBLE
		    , ROW_NUM
		FROM (
		    SELECT MATCH_CODE
		        , MATCH_LOCATION
		        , MATCH_DATE
		        , MATCH_START_TIME
		        , MATCH_END_TIME
		        , MATCH_APPLYNUM
		        , MATCH_WRITER
		        , MATCH_REGDATE
		        , MATCH_POSSIBLE
		        , ROWNUM AS ROW_NUM
		    FROM (
		            SELECT MATCH_CODE
		                , MATCH_LOCATION
		                , MATCH_DATE
		                , MATCH_START_TIME
		                , MATCH_END_TIME
		                , MATCH_APPLYNUM
		                , MATCH_WRITER
		                , TO_CHAR(MATCH_REGDATE, 'YYYY-MM-DD') AS MATCH_REGDATE
		                , MATCH_POSSIBLE
		            FROM MATCH
		            WHERE 1 = 1
		            AND TEAM_CODE = #{teamCode}
		            ORDER BY MATCH_CODE DESC
		        )
		)
	</select>
	
	<!-- 게시글 수 -->
	<select id="selectMatchCnt" resultType="int">
		SELECT COUNT(MATCH_CODE)
		FROM MATCH
		WHERE 1 = 1
		<if test="searchLocation != null and !searchLocation.equals('')">
		 	AND MATCH_LOCATION = '${searchLocation}'
		</if>
		<if test="searchKeyword != null and !searchKeyword.equals('')">
			AND MATCH_POSSIBLE = '${searchKeyword}'
		</if>
		<if test="searchValue != null and !searchValue.equals('')">
			AND MATCH_WRITER LIKE '%'||#{searchValue}||'%'
		</if>
	</select>
	
	<!-- 매치 상세보기 -->
	<select id="selectMatchDetail" resultMap="match">
		SELECT MC.MATCH_CODE
		    , MC.TEAM_CODE
		    , MC.TEAM_CODE_AWAY
		    , MC.MATCH_APPLYNUM
		    , MC.MATCH_WRITER
		    , MC.MATCH_INTRO
		    , MC.MATCH_REGDATE
		    , MC.MATCH_DATE
		    , MC.MATCH_START_TIME
		    , MC.MATCH_END_TIME
		    , MC.MATCH_POSSIBLE
		    , MC.MATCH_LOCATION
		    , MEMBER_NAME
		    , M.MEMBER_CODE
		    , MEMBER_TELL
		FROM MATCH MC, TEAM T, MEMBER M
		WHERE MC.TEAM_CODE = T.TEAM_CODE
		AND MC.TEAM_CODE = M.TEAM_CODE
		AND MATCH_CODE = #{matchCode}
	</select>
	
	<!-- 매치 신청 가능 여부 확인 -->
	<select id="checkMatchApply" resultType="String">
		SELECT MATCH_MANAGE_CODE
			, MATCH_CODE
			TEAM_CODE_AWAY
		FROM MATCH_MANAGE
		WHERE TEAM_CODE_AWAY = #{teamCodeAway}
		AND MATCH_CODE = #{matchCode}
	</select>
	
	<!-- 매치 신청하기 -->
	<insert id="insertApplyMatch">
		INSERT INTO MATCH_MANAGE (
			MATCH_MANAGE_CODE
			, MATCH_CODE
			, TEAM_CODE_AWAY
		)
		VALUES (
			(SELECT 'MATCH_MANAGE_CODE_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MATCH_MANAGE_CODE, 19, 4))), 0)+1, 4, '0') FROM MATCH_MANAGE)
			<!-- 상세보기하고 있는 매치코드 -->
			, #{matchCode}
			<!-- 로그인 한 사람 팀코드 -->
			, #{teamCodeAway}
		)
	</insert>
	<!-- 매치 신청한 팀 수 올리기 -->
	<update id="updateTeamCnt">
		UPDATE MATCH
		SET
		MATCH_APPLYNUM = MATCH_APPLYNUM + 1
        WHERE MATCH_CODE = #{matchCode}
	</update>
	
	<!-- 매치 신청 지원 팀 리스트 -->
	<!-- 	11/5 쿼리 수정 (문자발송할때 신청자 아이디, 경기날짜 필요함) -->
	<select id="matchApplyList" resultMap="matchManage">
		SELECT MATCH_MANAGE_CODE
			, MATCH_CODE
			, TEAM_CODE_AWAY
			, TEAM_NAME
			, MATCH_MANAGE_RESPONSE
            , MEMBER_NAME
		    , MB.MEMBER_CODE
		    , MEMBER_TELL
            , (SELECT MATCH_DATE||' '||MATCH_START_TIME||' ~ '||MATCH_END_TIME FROM MATCH WHERE MATCH_CODE = #{matchCode}) AS MATCH_DATE
		FROM MATCH_MANAGE M, TEAM T, MEMBER MB
        WHERE M.TEAM_CODE_AWAY = T.TEAM_CODE
        AND M.TEAM_CODE_AWAY = MB.TEAM_CODE
        AND MATCH_CODE = #{matchCode}
	</select>
<!-- 	<select id="matchApplyList" resultMap="matchManage"> -->
<!-- 		SELECT MATCH_MANAGE_CODE -->
<!-- 			, MATCH_CODE -->
<!-- 			, TEAM_CODE_AWAY -->
<!-- 			, TEAM_NAME -->
<!-- 			, MATCH_MANAGE_RESPONSE -->
<!--             , MEMBER_NAME -->
<!-- 		    , MB.MEMBER_CODE -->
<!-- 		    , MEMBER_TELL -->
<!-- 		FROM MATCH_MANAGE M, TEAM T, MEMBER MB -->
<!--         WHERE M.TEAM_CODE_AWAY = T.TEAM_CODE -->
<!--         AND M.TEAM_CODE_AWAY = MB.TEAM_CODE -->
<!--         AND MATCH_CODE = #{matchCode} -->
<!-- 	</select> -->
	<!-- 	<select id="matchApplyList" resultMap="matchManage"> -->
	<!-- 		SELECT MATCH_MANAGE_CODE -->
	<!-- 			, MATCH_CODE -->
	<!-- 			, TEAM_CODE_AWAY -->
	<!-- 			, TEAM_NAME -->
	<!-- 			, MATCH_MANAGE_RESPONSE -->
	<!-- 		FROM MATCH_MANAGE M, TEAM T -->
	<!--         WHERE M.TEAM_CODE_AWAY = T.TEAM_CODE -->
	<!--         AND MATCH_CODE = #{matchCode} -->
	<!-- 	</select> -->
	
	<!-- 매치 수정하기 -->
	<update id="updateDetail">
		UPDATE MATCH
		SET MATCH_LOCATION = #{matchLocation}
		, MATCH_DATE = #{matchDate}
		, MATCH_START_TIME = #{matchStartTime}
		, MATCH_END_TIME = #{matchEndTime}
		, MATCH_INTRO = #{matchIntro}
		WHERE MATCH_CODE = #{matchCode}
	</update>
	
	<!-- 매치 수락 -->
	<update id="updateResponse"> <!-- 매치 수락 누른 팀만 수락으로 변경 -->
		UPDATE MATCH_MANAGE
		SET
		MATCH_MANAGE_RESPONSE = '수락'
		WHERE MATCH_MANAGE_CODE = #{matchManageCode}
	</update>
	<update id="updateResponseRefuse"> <!-- 수락 누른 팀 제외 모든 팀 자동 거절 업데이트 쿼리 -->
		UPDATE MATCH_MANAGE
		SET
		MATCH_MANAGE_RESPONSE = '거절'
		WHERE MATCH_CODE = #{matchCode}
		AND MATCH_MANAGE_RESPONSE IN (SELECT MATCH_MANAGE_RESPONSE
									  FROM MATCH_MANAGE
									  WHERE MATCH_CODE = #{matchCode}
									  AND MATCH_MANAGE_RESPONSE = '응답중')	 
	</update>
	<update id="updatePossible"> <!-- 매치 테이블 수락 누른 팀 매칭 시키고 지원 불가능 업데이트 쿼리 -->
		UPDATE MATCH
		SET
		MATCH_POSSIBLE = '2'
		, TEAM_CODE_AWAY = #{teamCodeAway}
		WHERE MATCH_CODE = #{matchCode}
	</update>
	
	<!-- 매치 결과 입력 -->
	<insert id="insertResult">
		INSERT INTO MATCH_RESULT (
			MATCH_RESULT_CODE
			, MATCH_CODE
			, MATCH_RESULT_HOMETEAM_SCORE
			, MATCH_RESULT_AWAYTEAM_SCORE
		) VALUES (
			(SELECT 'MATCH_RESULT_CODE_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MATCH_RESULT_CODE, 19, 4))), 0)+1, 4, '0') FROM MATCH_RESULT)
			, #{matchCode}
			, #{matchResultHometeamScore}
			, #{matchResultAwayteamScore}
		)
	</insert>
	<!-- 팀 생성할때 랭크 테이블에 팀코드 넣기 -->
	<!-- 매치 결과에 따라 홈팀 랭크 입력.... DB 프로시저나 함수로 하는게 맞는건가?? -->
	<update id="updateHomeRank">
		UPDATE RANK
		SET
		RANK_WIN = RANK_WIN + (SELECT COUNT(MATCH_CODE)
		                        FROM MATCH_RESULT
		                        WHERE MATCH_RESULT_HOMETEAM_SCORE<![CDATA[>]]>MATCH_RESULT_AWAYTEAM_SCORE
		                        AND MATCH_CODE = #{matchCode})
		, RANK_DRAW = RANK_DRAW + (SELECT COUNT(MATCH_CODE)
		                            FROM MATCH_RESULT
		                            WHERE MATCH_RESULT_HOMETEAM_SCORE = MATCH_RESULT_AWAYTEAM_SCORE
		                            AND MATCH_CODE = #{matchCode})
		, RANK_LOSE = RANK_LOSE + (SELECT COUNT(MATCH_CODE)
		                            FROM MATCH_RESULT
		                            WHERE MATCH_RESULT_HOMETEAM_SCORE<![CDATA[<]]>MATCH_RESULT_AWAYTEAM_SCORE
		                            AND MATCH_CODE = #{matchCode})
		WHERE TEAM_CODE = #{teamCode}
	</update>
	<update id="updateAwayRank">
		UPDATE RANK
		SET
		RANK_WIN = RANK_WIN + (SELECT COUNT(MATCH_CODE)
		                        FROM MATCH_RESULT
		                        WHERE MATCH_RESULT_AWAYTEAM_SCORE<![CDATA[>]]>MATCH_RESULT_HOMETEAM_SCORE
		                        AND MATCH_CODE = #{matchCode})
		, RANK_DRAW = RANK_DRAW + (SELECT COUNT(MATCH_CODE)
		                            FROM MATCH_RESULT
		                            WHERE MATCH_RESULT_AWAYTEAM_SCORE = MATCH_RESULT_HOMETEAM_SCORE
		                            AND MATCH_CODE = #{matchCode})
		, RANK_LOSE = RANK_LOSE + (SELECT COUNT(MATCH_CODE)
		                            FROM MATCH_RESULT
		                            WHERE MATCH_RESULT_AWAYTEAM_SCORE<![CDATA[<]]>MATCH_RESULT_HOMETEAM_SCORE
		                            AND MATCH_CODE = #{matchCode})
		WHERE TEAM_CODE = #{teamCodeAway}
	</update>
	<update id="updateHomeTotal">
		UPDATE RANK
		SET
		RANK_TOTAL_SCORE = (RANK_WIN*3) + (RANK_DRAW*1)
		WHERE TEAM_CODE = #{teamCode}
	</update>
	<update id="updateAwayTotal">
		UPDATE RANK
		SET
		RANK_TOTAL_SCORE = (RANK_WIN*3) + (RANK_DRAW*1)
		WHERE TEAM_CODE = #{teamCodeAway}
	</update>
	
	<!-- 매치 결과 조회 -->
	<select id="selectResult" resultMap="matchResult">
		SELECT *
		FROM MATCH_RESULT
		WHERE MATCH_CODE = #{matchCode}
	</select>
	
	<!-- 매치 삭제 -->
	<delete id="deleteMatch">
		DELETE FROM MATCH
		WHERE MATCH_CODE = #{matchCode}
	</delete>
	<!-- 매치 지원팀 삭제 -->
	<delete id="deleteApplyMatch">
		DELETE FROM MATCH_MANAGE
		WHERE MATCH_CODE = #{matchCode}
	</delete>
	
</mapper>